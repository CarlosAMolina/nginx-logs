#!/bin/bash

remove_results_file() {
    logs_pathname=$1
    csv_pathname="$logs_pathname/result.csv"
    error_pathname="$logs_pathname/error.txt"
    echo "[DEBUG] Init remove results: '$csv_pathname', '$error_pathname'"
    rm $csv_pathname
    rm $error_pathname
}

measure() {
    language=$1
    command=$2
    if [ ! -z $3 ] ; then
	command="$command $3"
    fi
    time_unit=ms
    logs_pathname=/tmp/logs
    remove_results_file $logs_pathname
    echo "[DEBUG] Init language '$language' and command '$command'"
    echo "[DEBUG] Init heap only"
    echo "[DEBUG] Init date: $(date)"
    valgrind --tool=massif --time-unit=$time_unit --massif-out-file=massif.out.%p.$language.heap-only $command $logs_pathname
    echo "[DEBUG] End date: $(date)"
    remove_results_file $logs_pathname
    echo "[DEBUG] Init add stacks"
    echo "[DEBUG] Init date: $(date)"
    valgrind --tool=massif --time-unit=$time_unit --stacks=yes --massif-out-file=massif.out.%p.$language.add-stacks $command $logs_pathname
    echo "[DEBUG] End date: $(date)"
    remove_results_file $logs_pathname
    echo "[DEBUG] Init add pages as heap"
    echo "[DEBUG] Init date: $(date)"
    valgrind --tool=massif --time-unit=$time_unit --pages-as-heap=yes --massif-out-file=massif.out.%p.$language.add-pages-as-heap $command $logs_pathname
    echo "[DEBUG] End date: $(date)"
}

# main
cd ../..
for i in {0..2}
do
  echo "[DEBUG] Init measure $i"
  # Rust
  measure rust rust/target/release/nginx_logs
  # Python
  measure python python python/src/main.py
done

